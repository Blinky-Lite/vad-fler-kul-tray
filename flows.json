[
    {
        "id": "3f2da72f.995ab8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "Cube-A",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c4285970.3276d8",
        "type": "tab",
        "label": "web-app",
        "disabled": false,
        "info": ""
    },
    {
        "id": "26093b29.39d8d4",
        "type": "tab",
        "label": "Setup Wireless SSID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07e020c.d4d43",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "188d93e1.8dcc1c",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "1da6518.fb1b7af"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8857082f.cfdaa8",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6a402d92.12d7c4",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b1fab3c6.1f34c"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "44b51478.9c022c",
        "type": "websocket-listener",
        "z": "",
        "path": "/websocket",
        "wholemsg": "false"
    },
    {
        "id": "516aef81.a2867",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c427a7cd.35f1f8",
        "type": "websocket-listener",
        "z": "",
        "path": "/setup/websocket",
        "wholemsg": "false"
    },
    {
        "id": "5902d0c0.241a6",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6eaa13e9.4147bc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "init 1 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "2635280b.22f548",
                "3994b851.11f2f8"
            ]
        ]
    },
    {
        "id": "163af492.5e952b",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "53c95857.5f3d68"
            ]
        ]
    },
    {
        "id": "53c95857.5f3d68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nflow.set('pgm',null);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 860,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e954281.d9215",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = 'cube-A-settings.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "5902d0c0.241a6"
            ]
        ]
    },
    {
        "id": "7461da25.d86ac4",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "9e954281.d9215"
            ]
        ]
    },
    {
        "id": "9115ea87.0ca208",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "device = flow.get('device');\ndevice.imageData.value = null;\nvar pgm = flow.get('pgm');\nvar tooHotMsg = null;\nvar notHotMsg = null;\nif (pgm != null)\n{\n    flow.set('lastImageTime',new Date().getTime());\n    device.pixelMin.value = (pgm.minval - 27315) / 100;\n    device.pixelMax.value  = (pgm.maxval - 27315) / 100;\n    device.imageData.value = pgm;\n    device.timeStamp = pgm.timeStamp;\n    if (device.pixelMax.value >= device.pixelMax.alarm.limits.high)\n    {\n        tooHotMsg = {topic:'tooHotAlarm', payload:true};\n    }\n    else\n    {\n        notHotMsg = {topic:'notHotAlarm', payload:true};\n    }\n}\n\ndevice.linkQuality.value     = global.get('linkQuality');\ndevice.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(device, 'reading');\nvar toppy = global.get('project') + '/' + global.get('deviceTypeA') + '/' + global.get('deviceNameA') + '/reading';\nreturn [{topic:toppy, payload:device},tooHotMsg, notHotMsg];\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 3,
        "noerr": 0,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "a3ff8e5.b79de7",
                "e3701624.e0da58"
            ],
            [
                "16929cec.74f3b3",
                "247ec1cc.5f8a1e"
            ],
            [
                "620ca605.e38238",
                "247ec1cc.5f8a1e"
            ]
        ]
    },
    {
        "id": "6c15c07a.68169",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "cube-A Settings In",
        "links": [
            "58aa550c.06cb4c"
        ],
        "x": 35,
        "y": 200,
        "wires": [
            [
                "8fd42733.128c98"
            ]
        ]
    },
    {
        "id": "a3ff8e5.b79de7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "107beeed.934ed1"
            ]
        ]
    },
    {
        "id": "107beeed.934ed1",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 1150,
        "y": 560,
        "wires": []
    },
    {
        "id": "3ab766b1.558d9a",
        "type": "template",
        "z": "f07e020c.d4d43",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4109bee6.c2294",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "fd2bae7.8730f5"
            ]
        ]
    },
    {
        "id": "ed534f2d.ee021",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 610,
        "y": 40,
        "wires": [
            [
                "20e2a34a.7be64c"
            ]
        ]
    },
    {
        "id": "91ca4a7b.9010f8",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "ed534f2d.ee021"
            ]
        ]
    },
    {
        "id": "fd2bae7.8730f5",
        "type": "http response",
        "z": "188d93e1.8dcc1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 40,
        "wires": []
    },
    {
        "id": "85f6e038.56c86",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "91ca4a7b.9010f8"
            ]
        ]
    },
    {
        "id": "1da6518.fb1b7af",
        "type": "function",
        "z": "188d93e1.8dcc1c",
        "name": "Create userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "85f6e038.56c86"
            ]
        ]
    },
    {
        "id": "20e2a34a.7be64c",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 760,
        "y": 40,
        "wires": [
            [
                "4109bee6.c2294"
            ]
        ]
    },
    {
        "id": "73f0aea6.1d002",
        "type": "template",
        "z": "8857082f.cfdaa8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fab3c6.1f34c",
        "type": "subflow:8857082f.cfdaa8",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e205aa81.b2b958"
            ]
        ]
    },
    {
        "id": "133517a3.6ba2b8",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "6a402d92.12d7c4",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e205aa81.b2b958",
        "type": "subflow:f07e020c.d4d43",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "133517a3.6ba2b8"
            ]
        ]
    },
    {
        "id": "8f14813b.bcdfc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "960991fa.0fafe",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "8f14813b.bcdfc"
            ]
        ]
    },
    {
        "id": "8fd42733.128c98",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "6c43015c.a827c"
            ],
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "2635280b.22f548",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var filename = 'cube-A-settings.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "163af492.5e952b"
            ]
        ]
    },
    {
        "id": "6c43015c.a827c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != global.get('deviceTypeA')) return null;\nif (mqttArray[2] != global.get('deviceNameA')) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "7461da25.d86ac4"
            ]
        ]
    },
    {
        "id": "225946b1.9e8b3a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != global.get('deviceTypeA')) return null;\nif (mqttArray[2] != global.get('deviceNameA')) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "960991fa.0fafe"
            ]
        ]
    },
    {
        "id": "1482e22f.57fa2e",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "6533b535.454c4c"
            ]
        ]
    },
    {
        "id": "c76a9544.852e88",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul {{{payload.script.name}}}",
        "output": "str",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "c98976c.3996888"
            ]
        ]
    },
    {
        "id": "f078068d.c90bc8",
        "type": "subflow:6a402d92.12d7c4",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "c98976c.3996888",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Distance (cm)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var audioAlarm = new Audio('/audio/hold-your-horses.ogg');\n        var audioAlarmOn = true;\n        var imageDelayChanged = false;\n        var ultraSoundRangeChanged = false;\n        var archiveMinTempChanged = false;\n        var archivePixelPercentChanged = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#imageDelayButtonId').hide();\n            $('#ultraSoundRangeButtonId').hide();\n            $('#archiveMinTempButtonId').hide();\n            $('#archivePixelPercentButtonId').hide();\n        }\n        function onWebSocketOpen()\n        {\n//            sendWebSocketMessageObject({topic : 'getLastImage',userID : userID});\n//            sendWebSocketMessageObject({topic : 'pingServer',userID : userID});\n//            setInterval(function(){sendWebSocketMessageObject({topic : 'pingServer',userID : userID});}, 10000);\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                case 'lastImage':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;;\n                        if (device.imageData.value != null)\n                        {\n                            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                            pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                            plotImage();\n                            updatePixelMaxBarChart();\n                        }\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!imageDelayChanged)$('#imageDelayInputId').val(device.imageDelay.value);\n            if (!ultraSoundRangeChanged)$('#ultraSoundRangeInputId').val(device.ultraSoundRange.value);\n            if (!archiveMinTempChanged)$('#archiveMinTempInputId').val(device.archiveMinTemp.value);\n            if (!archivePixelPercentChanged)$('#archivePixelPercentInputId').val(device.archivePixelPercent.value);\n            if (device.imageData.value != null)\n            {\n                historyStripChart.add3TracePoints(device.pixelMax.value, device.pixelMin.value, device.ultraSoundDistance.value);\n                $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                plotImage();\n                updatePixelMaxBarChart();\n                \n                var image1dArray = [];\n                var ipixel = 0;\n                var plow = (pgm.minval - 27315) / 100;\n                var phigh = (pgm.maxval - 27315) / 100;\n                if ((device.pixelMax.alarm.value == 2) || (device.pixelMax.alarm.value == 4))\n                {\n                    if (audioAlarmOn)\n                    {\n                        var playPromise = audioAlarm.play();\n                        if (playPromise !== undefined) \n                        {\n                            playPromise.then(_ => \n                            {\n                            // Automatic playback started!\n                            // Show playing UI.\n                            }).catch(error => \n                            {\n                            // Auto-play was prevented\n                            // Show paused UI.\n                            });\n                         }\n                    }\n                }\n                for (var irow = 0; irow < pgm.nrows; ++irow)\n                {\n                    for (var icol = 0; icol < pgm.ncols; ++icol)\n                    {\n                        image1dArray[ipixel] = (pgm.imageArray[irow][icol] / 256.0) * (phigh - plow) + plow;\n                         ++ipixel;\n                    }\n                }\n\n                var layout = {title: \"Temperature (C)\", xaxis: {title: \"Temperature (C)\"}, yaxis: {title: \"Count\"}};\n\n                Plotly.newPlot('pixelHistogramChart', [{x: image1dArray, type:'histogram',  autobinx: true }]);\n//              Plotly.newPlot('pixelHistogramChart', [{x: image1dArray, type:'histogram',  xbins: {size: 0.5,start: 0} }],layout);\n            }\n            else\n            {\n\n                historyStripChart.add1TracePoints(device.ultraSoundDistance.value);\n            }\n            \n            var buttonColor = 'green';\n            var buttonTextColor = 'black';\n            var buttonText = \"Off\";\n            if (device.flipHorizontal.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipHorizontalId').css('color', buttonTextColor); \n            $('#flipHorizontalId').css('background-color', buttonColor); \n            $('#flipHorizontalId').text(buttonText); \n\n            buttonColor = 'green';\n            buttonTextColor = 'black';\n            buttonText = \"Off\";\n            if (device.flipVertical.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipVerticalId').css('color', buttonTextColor); \n            $('#flipVerticalId').css('background-color', buttonColor); \n            $('#flipVerticalId').text(buttonText); \n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = canvasWidth  / pgm.ncols;\n            var rectHeight = canvasHeight / pgm.nrows;\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * pgm.imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = pgm.imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n         function updatePixelMaxBarChart()\n        {\n            $('#pixelMaxBarPlot').show();\n            var pixelMaxBarConfig = \n                {\n                    lolo            : device.pixelMax.alarm.limits.lolo, \n                    low             : device.pixelMax.alarm.limits.low, \n                    high            : device.pixelMax.alarm.limits.high, \n                    hihi            : device.pixelMax.alarm.limits.hihi, \n                    value           : device.pixelMax.value, \n                    unit            : device.pixelMax.unit, \n                    textsize        : 38,\n                    label           : 'pixelMax', \n                    lowColor        : '#0000ff', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 200, \n                    htmlId          : 'pixelMaxBarPlot'\n                };\n            setHorzBarWidget(pixelMaxBarConfig);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n            $('#pixelMaxBarPlot').hide();\n        }\n        function toggleSound()\n        {\n            audioAlarmOn = !audioAlarmOn;\n            if(audioAlarmOn)\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'green'); \n                $('#soundButtonId').text('On'); \n            }\n            else\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'grey'); \n                $('#soundButtonId').text('Off'); \n            }\n\n        }\n        function flipHorizontal()\n        {\n            if (device.flipHorizontal.value > 0)\n            {\n                device.flipHorizontal.value = 0;\n            }\n            else\n            {\n                device.flipHorizontal.value = 1;\n                \n            }\n            $('#flipHorizontalId').css('color', 'black'); \n            $('#flipHorizontalId').css('background-color', 'grey'); \n            $('#flipHorizontalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function flipVertical()\n        {\n            if (device.flipVertical.value > 0)\n            {\n                device.flipVertical.value = 0;\n            }\n            else\n            {\n                device.flipVertical.value = 1;\n                \n            }\n            $('#flipVerticalId').css('color', 'black'); \n            $('#flipVerticalId').css('background-color', 'grey'); \n            $('#flipVerticalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                sendSettingToMqtt(mqttMessage);\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function imageDelayChange()\n        {\n            imageDelayChanged = true;\n            $('#imageDelayButtonId').show();\n        }\n        function ultraSoundRangeChange()\n        {\n            ultraSoundRangeChanged = true;\n            $('#ultraSoundRangeButtonId').show();\n        }\n        function archiveMinTempChange()\n        {\n            archiveMinTempChanged = true;\n            $('#archiveMinTempButtonId').show();\n        }\n        function archivePixelPercentChange()\n        {\n            archivePixelPercentChanged = true;\n            $('#archivePixelPercentButtonId').show();\n        }\n        function imageDelay()\n        {\n            $('#imageDelayButtonId').hide();\n            if (isNaN($('#imageDelayInputId').val()))\n            {\n                imageDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#imageDelayInputId').val()), 'imageDelay');\n            imageDelayChanged = false;\n        }\n        function ultraSoundRange()\n        {\n            $('#ultraSoundRangeButtonId').hide();\n            if (isNaN($('#ultraSoundRangeInputId').val()))\n            {\n                ultraSoundRangeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#ultraSoundRangeInputId').val()), 'ultraSoundRange');\n            ultraSoundRangeChanged = false;\n        }\n        function archiveMinTemp()\n        {\n            $('#archiveMinTempButtonId').hide();\n            if (isNaN($('#archiveMinTempInputId').val()))\n            {\n                archiveMinTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archiveMinTempInputId').val()), 'archiveMinTemp');\n            archiveMinTempChanged = false;\n        }\n        function archivePixelPercent()\n        {\n            $('#archivePixelPercentButtonId').hide();\n            if (isNaN($('#archivePixelPercentInputId').val()))\n            {\n                archivePixelPercentChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archivePixelPercentInputId').val()), 'archivePixelPercent');\n            archivePixelPercentChanged = false;\n        }\n",
        "output": "str",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "1beecb41.f18725"
            ]
        ]
    },
    {
        "id": "c1034be9.37f0a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 640,
        "y": 280,
        "wires": [
            [
                "6d863907.47af88"
            ]
        ]
    },
    {
        "id": "450b0136.7ccbd",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.pixelMaxBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.histogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.controls}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 950,
        "y": 360,
        "wires": [
            [
                "f078068d.c90bc8"
            ]
        ]
    },
    {
        "id": "7fef0c19.4ed014",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Temperature</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td>\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table width='800px'>\n                                    <tr>\n                                        <td width='100%' align='center'>\n                                            <span  class='card-text' id='snapshotTimeStamp'></span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 120,
        "wires": [
            [
                "295da841.e3a208"
            ]
        ]
    },
    {
        "id": "e2fa40e5.9c393",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "c1034be9.37f0a8"
            ]
        ]
    },
    {
        "id": "45e607d2.0f0d38",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 320,
        "wires": [
            [
                "450b0136.7ccbd"
            ]
        ]
    },
    {
        "id": "d3b167fa.414fa8",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "PROJECT",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "8f82985c.1fa328",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "SETTINGSPASSWORD",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "5497633f.4a758c",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Save global init",
        "func": "global.set(msg.topic,msg.payload);\nglobal.set('websocketPing',0);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 360,
        "y": 100,
        "wires": []
    },
    {
        "id": "d162777.1380788",
        "type": "exec",
        "z": "3f2da72f.995ab8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 320,
        "wires": [
            [
                "adf1efae.e4e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "77ae9cee.d460f4",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 320,
        "wires": [
            [
                "d162777.1380788"
            ]
        ]
    },
    {
        "id": "adf1efae.e4e0f",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality",
        "func": "var linkQuality = 0;\nvar signalLevel = -100;\nvar ssid = \"none\";\n\nvar info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nif (linkStartIndex >= 0)\n{\n    var levelStartIndex = info.indexOf('Signal level=');\n    var linkStopIndex   = info.indexOf('/70');\n    linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\n    signalLevel =  Number(info.substring(levelStartIndex + 13, levelStartIndex + 17));\n    ssid = info.substring(info.indexOf('ESSID') + 7);\n    ssid = ssid.substring(0,ssid.indexOf('\"'));\n}\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "c40dd8f4.63a9d8"
            ]
        ]
    },
    {
        "id": "6533b535.454c4c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "c76a9544.852e88"
            ]
        ]
    },
    {
        "id": "b6fcc866.328488",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 280,
        "wires": [
            [
                "45e607d2.0f0d38"
            ]
        ]
    },
    {
        "id": "b88d5de6.98fee",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n//                            font: {color: valueColor, size:barConfig.textsize},\n                            font: {color: '#000000', size:45},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "da5b4a1e.c62d78"
            ]
        ]
    },
    {
        "id": "6d863907.47af88",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.pixelMaxBar",
        "field": "payload.html.pixelMaxBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-3'>\n                            <a class='btn btn-block card-button big-text' href='/setup'>Setup</a>\n                        </div>\n                        <div class='col-md-6'>\n                            <p class='card-title'>Max Temperature</p>\n                         </div>\n                        <div class='col-md-3'>\n                            <button class='btn btn-block card-button big-text' id=\"pixelMaxButton\" onclick=\"editDevice('pixelMax')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"pixelMaxBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "7fef0c19.4ed014"
            ]
        ]
    },
    {
        "id": "da5b4a1e.c62d78",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "e2fa40e5.9c393"
            ]
        ]
    },
    {
        "id": "f062c2f5.4fb63",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Process Data",
        "func": "if (msg.payload.length < 1)\n{\n    var errCount = context.get('errCount');\n    if (errCount == undefined) errCount = 0;\n    ++errCount\n    if (errCount < 5)\n    {\n        context.set('errCount',errCount);\n        return [{topic:'takeImage',payload:true, delay:flow.get('device').imageDelay.value}, null];\n    }\n    else\n    {\n        context.set('errCount',0);\n        node.warn(\"Resetting Camera\");\n        flow.set('resettingCamera',true);\n        return [null, {topic:'resetCamera',payload:true}];\n    }\n}\nelse\n{\n    context.set('errCount',0);\n}\nvar imgArray = [];\nvar dataView     = new DataView(new ArrayBuffer(2));\nfor (var irow = 0; irow < 4800; ++irow)\n{\n        dataView.setUint8(0, msg.payload[irow * 2]);\n        dataView.setUint8(1, msg.payload[irow * 2 + 1]);\n        imgArray[irow] = dataView.getUint16(0);\n}\nvar minval = imgArray[0];\nvar maxval = imgArray[0];\nfor (var irow = 0; irow < 4800; ++irow)\n{\n        if ( minval > imgArray[irow]) minval = imgArray[irow];\n        if ( maxval < imgArray[irow]) maxval = imgArray[irow];\n}\nif (minval == 0) return [{topic:'takeImage',payload:true, delay:flow.get('device').imageDelay.value}, null];\nvar imgArray2D = [];\nvar deltaVal = maxval - minval;\nif (deltaVal == 0) deltaVal = 1;\nnumPix32 = 0;\nvar archiveMinTempK = Math.round(100 * flow.get('device').archiveMinTemp.value) + 27315;\nfor (var irow = 0; irow < 60; ++irow)\n{\n    imgArray2D[irow] = [];\n    for (var icol = 0; icol < 80; ++icol)\n    {\n        if (imgArray[irow * 80 + icol] > archiveMinTempK) ++numPix32;\n        if (flow.get('device').flipVertical.value == 0)\n        {\n            if (flow.get('device').flipHorizontal.value == 0)\n            {\n                imgArray2D[irow][icol] = Math.floor(256.0 * (imgArray[irow * 80 + icol] - minval) / deltaVal);\n            }\n            else\n            {\n                imgArray2D[irow][icol] = Math.floor(256.0 * (imgArray[irow * 80 + 79 - icol] - minval) / deltaVal);\n            }\n        }\n        else\n        {\n            if (flow.get('device').flipHorizontal.value == 0)\n            {\n                imgArray2D[irow][icol] = Math.floor(256.0 * (imgArray[(59 - irow) * 80 + icol] - minval) / deltaVal);\n            }\n            else\n            {\n                imgArray2D[irow][icol] = Math.floor(256.0 * (imgArray[(59 - irow) * 80 + 79 - icol] - minval) / deltaVal);\n            }\n        }\n    }    \n}\nvar pgm = \n{\n    'type'      : 'P2',\n    'timeStamp' : new Date().getTime(),\n    'nrows'     : 60,\n    'ncols'     : 80,\n    'minval'    : minval,\n    'maxval'    : maxval,\n    'imageArray': imgArray2D\n};\nvar numPix32Cut = Math.round(48.0 * flow.get('device').archivePixelPercent.value);\nif (numPix32 > numPix32Cut)\n{\n    flow.get('device').archiveData.value = 1;\n}\nelse\n{\n    flow.get('device').archiveData.value = 0;\n    pgm = null;\n}\nflow.set('pgm',pgm);\nreturn [{topic:'takeImage',payload:true, delay:flow.get('device').imageDelay.value}, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "9115ea87.0ca208"
            ],
            [
                "bf3bbeb6.27c5f"
            ]
        ]
    },
    {
        "id": "756aff3b.081cc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25capture/flirLepton25capture.exe",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Capture Flir image",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "f062c2f5.4fb63"
            ],
            [],
            []
        ]
    },
    {
        "id": "e3701624.e0da58",
        "type": "mqtt out",
        "z": "5f562f66.a301e",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "516aef81.a2867",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "6a87dbb1.d06e64",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Subscribe Settings",
        "topic": "+/+/+/setting",
        "qos": "0",
        "datatype": "auto",
        "broker": "516aef81.a2867",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "a413542a.4b41a8"
            ]
        ]
    },
    {
        "id": "15c1f139.572e9f",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Restart Tray",
        "topic": "+/+/+/restartTray",
        "qos": "0",
        "datatype": "auto",
        "broker": "516aef81.a2867",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "a58d418f.0a53e"
            ]
        ]
    },
    {
        "id": "288e416.8374dbe",
        "type": "status",
        "z": "5f562f66.a301e",
        "name": "",
        "scope": [
            "756aff3b.081cc"
        ],
        "x": 100,
        "y": 860,
        "wires": [
            [
                "3e88e0d5.feeb1"
            ]
        ]
    },
    {
        "id": "3e88e0d5.feeb1",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Get camera process",
        "func": "var newMsg = {fill: msg.status.fill, pid:msg.status.text}\nflow.set('cameraProcess', newMsg);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 280,
        "y": 860,
        "wires": []
    },
    {
        "id": "64edca1f.282284",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 290,
        "y": 700,
        "wires": [
            [
                "e68a810e.f7863"
            ]
        ]
    },
    {
        "id": "e68a810e.f7863",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check if Process hung",
        "func": "var process = flow.get('cameraProcess');\nvar newMsg = null;\nif (process.pid != undefined)\n{\n    var pid = Number(process.pid.substring(4)) + 1;\n    newMsg = {topic:'killProcess',payload:pid}\n    node.warn('Camera Hang')\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 740,
        "wires": [
            [
                "3132ba84.59a1f6"
            ]
        ]
    },
    {
        "id": "3132ba84.59a1f6",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "kill -9",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 270,
        "y": 780,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "58aa550c.06cb4c",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Settings Out",
        "links": [
            "6c15c07a.68169"
        ],
        "x": 715,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3a1fb97e.c10786",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "58aa550c.06cb4c"
            ]
        ]
    },
    {
        "id": "f270bcda.23518",
        "type": "switch",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pingServer",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "3a1fb97e.c10786"
            ],
            [
                "ade0ddee.d077b"
            ]
        ]
    },
    {
        "id": "75bcac45.dd63c4",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 1220,
        "wires": [
            [
                "f270bcda.23518"
            ]
        ]
    },
    {
        "id": "fcf8eef6.6c823",
        "type": "websocket in",
        "z": "5f562f66.a301e",
        "name": "/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "75bcac45.dd63c4"
            ]
        ]
    },
    {
        "id": "a413542a.4b41a8",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "6c43015c.a827c"
            ]
        ]
    },
    {
        "id": "a58d418f.0a53e",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "56b21d74.f13534",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 740,
        "wires": [
            [
                "f8d673c5.5bd28"
            ]
        ]
    },
    {
        "id": "620ca605.e38238",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 720,
        "wires": [
            [
                "78708c9a.23eac4",
                "f8d673c5.5bd28"
            ]
        ]
    },
    {
        "id": "78708c9a.23eac4",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1100,
        "y": 740,
        "wires": [
            [
                "56b21d74.f13534"
            ]
        ]
    },
    {
        "id": "ade0ddee.d077b",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "websocketPing",
        "func": "global.set('websocketPing',new Date().getTime());\n",
        "outputs": 0,
        "noerr": 0,
        "x": 580,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a59831a8.7ff9",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Capture Flir image In",
        "links": [
            "886f23d1.03ddd",
            "a851f6f5.3a80f8"
        ],
        "x": 115,
        "y": 660,
        "wires": [
            [
                "756aff3b.081cc",
                "64edca1f.282284"
            ]
        ]
    },
    {
        "id": "c10b8b14.855568",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.histogram",
        "field": "payload.html.histogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>Pixel Histogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"pixelHistogramChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 980,
        "y": 200,
        "wires": [
            [
                "4664bf4.cfcd04"
            ]
        ]
    },
    {
        "id": "bf3bbeb6.27c5f",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 800,
        "y": 940,
        "wires": [
            [
                "5fe1f713.dae2a8"
            ]
        ]
    },
    {
        "id": "f56d3371.a7153",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "DEVICETYPEA",
        "topic": "deviceTypeA",
        "payload": "DEVICETYPEA",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "c09bc160.3a3f1",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "DEVICENAMEA",
        "topic": "deviceNameA",
        "payload": "DEVICENAMEA",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "295da841.e3a208",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 160,
        "wires": [
            [
                "c10b8b14.855568"
            ]
        ]
    },
    {
        "id": "1beecb41.f18725",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Max Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'red',\n                        size: 10,\n                        symbol: 'circle'\n                    }\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Min Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'green',\n                        size: 10,\n                        symbol: 'square'\n                    }\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Distance',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 5,\n                        symbol: 'diamond'\n                    }\n                };\n            }\n            add1TracePoints(trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone && (this.trace1.x.length > 0))\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone && (this.trace2.x.length > 0))\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone && (this.trace3.x.length > 0))\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                if (this.trace1.x.length > 0)\n                {\n                    Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n                }\n                else\n                {\n                    Plotly.newPlot(this.plotConfig.htmlId, [this.trace3], this.layout);\n                }\n            }\n            add3TracePoints(trace1Pt, trace2Pt, trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "b88d5de6.98fee"
            ]
        ]
    },
    {
        "id": "4664bf4.cfcd04",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.controls",
        "field": "payload.html.controls",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Alarm Sound</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:green;color:black' id='soundButtonId' onclick=\"toggleSound()\" >On</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Horizontal</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipHorizontalId' onclick=\"flipHorizontal()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Vertical</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipVerticalId' onclick=\"flipVertical()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Image Delay (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"imageDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"imageDelayChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"imageDelayButtonId\" onclick=\"imageDelay()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >UltraSound Range (cm)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"ultraSoundRangeInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"ultraSoundRangeChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"ultraSoundRangeButtonId\" onclick=\"ultraSoundRange()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Temp (C)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archiveMinTempInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archiveMinTempChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archiveMinTempButtonId\" onclick=\"archiveMinTemp()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Pixel (%)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archivePixelPercentInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archivePixelPercentChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archivePixelPercentButtonId\" onclick=\"archivePixelPercent()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 240,
        "wires": [
            [
                "b6fcc866.328488"
            ]
        ]
    },
    {
        "id": "e2249214.f4375",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check  Target Distance",
        "func": "if (flow.get('device') == undefined) return [null,null];\nif (flow.get('resettingCamera') == undefined) return [null,null];\nflow.get('device').archiveData.value = 0;\nflow.set('pgm',null);\nflow.get('device').ultraSoundDistance.value = msg.payload;\nvar minTime = flow.get('device').imageDelay.value;\nvar range = flow.get('device').ultraSoundRange.value;\n\nvar lastImageTime = flow.get('lastImageTime');\nif (lastImageTime == undefined) \n{\n    lastImageTime = new Date().getTime();\n    flow.set('lastImageTime',lastImageTime);\n}\nvar nowTime = new Date().getTime();\nif ((nowTime - lastImageTime) > minTime)\n{\n    if (msg.payload < range)\n    {\n        if (!flow.get('resettingCamera')) return [msg, null];\n    }\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "a851f6f5.3a80f8"
            ],
            [
                "9115ea87.0ca208"
            ]
        ]
    },
    {
        "id": "a851f6f5.3a80f8",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "target distance out",
        "links": [
            "a59831a8.7ff9"
        ],
        "x": 675,
        "y": 980,
        "wires": []
    },
    {
        "id": "6c495461.9069cc",
        "type": "rpi-srf",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "SRF",
        "pulse": "1",
        "pins": "29,31",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "6840cfcb.cb382"
            ]
        ]
    },
    {
        "id": "6840cfcb.cb382",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "HC04 Distance",
        "func": "return {topic:'targetDistance',payload:Number(msg.payload)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "e2249214.f4375"
            ]
        ]
    },
    {
        "id": "ffd48d2b.d729e",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "Manual Camera trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "x": 500,
        "y": 940,
        "wires": [
            [
                "a851f6f5.3a80f8"
            ]
        ]
    },
    {
        "id": "3994b851.11f2f8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Initialize Stuff",
        "func": "flow.set('resettingCamera',true);\nflow.set('lastImageTime',new Date().getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 400,
        "wires": [
            [
                "6abb16.fc9774ec"
            ]
        ]
    },
    {
        "id": "fd6e82bc.30235",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "clear camera reset",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1950,
        "y": 940,
        "wires": []
    },
    {
        "id": "efc84a31.d4d1e8",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Red LED",
        "pin": "37",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1600,
        "y": 640,
        "wires": []
    },
    {
        "id": "16929cec.74f3b3",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set alarm burst",
        "func": "var burstCount = context.get('burstCount');\nif (burstCount == undefined) burstCount = 0;\nif (msg.topic == 'tooHotAlarm') burstCount = 0;\n++burstCount;\ncontext.set('burstCount',burstCount)\nif (burstCount < 20) return msg;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 640,
        "wires": [
            [
                "b47bb87.ee68148",
                "97eff5eb.0b1a58"
            ]
        ]
    },
    {
        "id": "51f565be.01b09c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 640,
        "wires": [
            [
                "efc84a31.d4d1e8"
            ]
        ]
    },
    {
        "id": "b47bb87.ee68148",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1170,
        "y": 680,
        "wires": [
            [
                "3b27ec2a.410934"
            ]
        ]
    },
    {
        "id": "3b27ec2a.410934",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "return {topic:'redLed',payload:0};",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 680,
        "wires": [
            [
                "efc84a31.d4d1e8",
                "16929cec.74f3b3"
            ]
        ]
    },
    {
        "id": "97eff5eb.0b1a58",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1170,
        "y": 640,
        "wires": [
            [
                "51f565be.01b09c"
            ]
        ]
    },
    {
        "id": "6c8ad237.33ae7c",
        "type": "inject",
        "z": "26093b29.39d8d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 840,
        "y": 40,
        "wires": [
            [
                "6d4f56e0.04a238"
            ]
        ]
    },
    {
        "id": "6d4f56e0.04a238",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "iwconfig wlan0 | grep ESSID",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 840,
        "y": 100,
        "wires": [
            [
                "c6d2055.718baf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6d2055.718baf8",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Get SSID",
        "func": "var ssid = msg.payload.substring(msg.payload.indexOf(\"ESSID\") + 6).split('\\n')[0];\nreturn {topic:msg.topic, payload:{topic:msg.topic ,payload:ssid, userID: msg.userID }};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "1e80ca53.767a96",
        "type": "http in",
        "z": "26093b29.39d8d4",
        "name": "/setup",
        "url": "/setup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "2213c6c9.33a20a"
            ]
        ]
    },
    {
        "id": "e1192fe0.96315",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul {{{payload.script.name}}}",
        "output": "str",
        "x": 240,
        "y": 540,
        "wires": [
            [
                "fc3a3f22.7533"
            ]
        ]
    },
    {
        "id": "8c1b90c5.b4e4b",
        "type": "subflow:6a402d92.12d7c4",
        "z": "26093b29.39d8d4",
        "name": "",
        "x": 910,
        "y": 500,
        "wires": []
    },
    {
        "id": "fc3a3f22.7533",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var appStarted = false;\n        var networkList = null;\n        var selectedNetwork = -1;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#pwDialog').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!appStarted)\n            {\n                sendWebSocketMessageObject({topic : 'getConnection',userID : userID});\n                appStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getConnection':\n                    $('#connectedSSID').text(msg.payload);\n                    sendWebSocketMessageObject({topic : 'getNetworks',userID : userID});\n                    break;\n                case 'connectToNetwork':\n                    sendWebSocketMessageObject({topic : 'getConnection',userID : userID});\n                    $('#ssid').attr('disabled',false);\n                    $('#ssidkey').attr('disabled',false);\n                    $('#ssidButton').attr('disabled',false);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function setSsid()\n        {\n            var ssid = $('#ssid').val();\n            var ssidkey = $('#ssidkey').val();\n            sendWebSocketMessageObject({topic : 'connectToNetwork',userID : userID, payload:{ssid:ssid, key:ssidkey}});\n            $('#connectedSSID').text('');\n            $('#ssid').val('');\n            $('#ssid').attr('disabled',true);\n            $('#ssidkey').val('');\n            $('#ssidkey').attr('disabled',true);\n            $('#ssidButton').attr('disabled',true);\n            \n        }\n",
        "output": "str",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "380c1491.22fa9c"
            ]
        ]
    },
    {
        "id": "380c1491.22fa9c",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "4e6c8908.0524c8"
            ]
        ]
    },
    {
        "id": "41d7170c.80e638",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.wirelessSetup}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 770,
        "y": 500,
        "wires": [
            [
                "8c1b90c5.b4e4b"
            ]
        ]
    },
    {
        "id": "930a7a63.11bf58",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "e1192fe0.96315"
            ]
        ]
    },
    {
        "id": "2213c6c9.33a20a",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "930a7a63.11bf58"
            ]
        ]
    },
    {
        "id": "4e6c8908.0524c8",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "html.wirelessSetup",
        "field": "payload.html.wirelessSetup",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Network Connection</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-6'>\n                                <span  class='card-text' >Connected to:</span>\n                            </div>\n                            <div class='col-md-6'>\n                                 <span  class='card-text' id='connectedSSID'>off/any</span>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">SSID</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssid\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">KEY</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssidkey\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-4'>\n                                <button class='btn btn-block card-button big-text' id=\"ssidButton\" onclick=\"setSsid()\" >Connect</button>\n                             </div>\n                            <div class='col-md-4'>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 810,
        "y": 460,
        "wires": [
            [
                "41d7170c.80e638"
            ]
        ]
    },
    {
        "id": "ab64b0d5.c3fee",
        "type": "websocket in",
        "z": "26093b29.39d8d4",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "dbec0823.672678"
            ]
        ]
    },
    {
        "id": "9bc013a4.b46c",
        "type": "websocket out",
        "z": "26093b29.39d8d4",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 1230,
        "y": 140,
        "wires": []
    },
    {
        "id": "dbec0823.672678",
        "type": "json",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "bb0701eb.a4b29"
            ]
        ]
    },
    {
        "id": "5ead619d.4bfff",
        "type": "switch",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getNetworks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getConnection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connectToNetwork",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 80,
        "wires": [
            [],
            [
                "6d4f56e0.04a238"
            ],
            [
                "71a17106.a018d"
            ]
        ]
    },
    {
        "id": "bb0701eb.a4b29",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "set userId and topic",
        "func": "return {\n    topic   : msg.payload.topic, \n    userID  : msg.payload.userID,\n    payload : msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "5ead619d.4bfff"
            ]
        ]
    },
    {
        "id": "71a17106.a018d",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Prepare WPA",
        "func": "var fileContents = 'ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1\\ncountry=SE\\n';\nfileContents = fileContents + 'network={\\n   ssid=\"' + msg.payload.ssid + '\"\\n   psk=\"' + msg.payload.key + '\"\\n}\\n'\nreturn {topic:msg.topic, payload:fileContents};",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "3ef93a0f.951976"
            ]
        ]
    },
    {
        "id": "3ef93a0f.951976",
        "type": "file",
        "z": "26093b29.39d8d4",
        "name": "Write to ssid.conf",
        "filename": "/home/pi/ssid.conf",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 160,
        "wires": [
            [
                "4c1194c8.db057c"
            ]
        ]
    },
    {
        "id": "4c1194c8.db057c",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo mv /home/pi/ssid.conf /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "mv ssid to wpa",
        "x": 760,
        "y": 220,
        "wires": [
            [
                "1acb5f15.919f11"
            ],
            [],
            []
        ]
    },
    {
        "id": "1acb5f15.919f11",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 920,
        "y": 220,
        "wires": [
            [
                "20f7c462.3d395c"
            ]
        ]
    },
    {
        "id": "20f7c462.3d395c",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo wpa_cli -i wlan0 reconfigure",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "wlan0 reconfigure",
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "c80f01f0.2fe93"
            ],
            [],
            []
        ]
    },
    {
        "id": "c80f01f0.2fe93",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 300,
        "wires": [
            [
                "f4433528.9a4ab8"
            ]
        ]
    },
    {
        "id": "f4433528.9a4ab8",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "set topic",
        "func": "return {topic:msg.topic, payload:{topic:msg.topic, userID: msg.userID }};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "242fb7ee.ec2318",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe setFfcStateToManual",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "setFfcStateToManual",
        "x": 740,
        "y": 400,
        "wires": [
            [
                "1cc9fd62.227313"
            ],
            [],
            []
        ]
    },
    {
        "id": "6abb16.fc9774ec",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reboot",
        "x": 410,
        "y": 400,
        "wires": [
            [
                "e1d61d76.3569b"
            ],
            [],
            []
        ]
    },
    {
        "id": "e1d61d76.3569b",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 560,
        "y": 400,
        "wires": [
            [
                "242fb7ee.ec2318"
            ]
        ]
    },
    {
        "id": "4532c4da.1b43ac",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "clear camera reset",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1430,
        "y": 400,
        "wires": []
    },
    {
        "id": "1cc9fd62.227313",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 400,
        "wires": [
            [
                "82484d70.a7df"
            ]
        ]
    },
    {
        "id": "82484d70.a7df",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "dc342449.ddba88"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc342449.ddba88",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "4532c4da.1b43ac"
            ]
        ]
    },
    {
        "id": "1cd59f0.d6f2e61",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe setFfcStateToManual",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "setFfcStateToManual",
        "x": 1260,
        "y": 940,
        "wires": [
            [
                "34b6f055.70dd4"
            ],
            [],
            []
        ]
    },
    {
        "id": "5fe1f713.dae2a8",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reboot",
        "x": 930,
        "y": 940,
        "wires": [
            [
                "4105c23f.1181bc"
            ],
            [],
            []
        ]
    },
    {
        "id": "4105c23f.1181bc",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1080,
        "y": 940,
        "wires": [
            [
                "1cd59f0.d6f2e61"
            ]
        ]
    },
    {
        "id": "34b6f055.70dd4",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1460,
        "y": 940,
        "wires": [
            [
                "844f0fc.e7ab8f"
            ]
        ]
    },
    {
        "id": "844f0fc.e7ab8f",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 1610,
        "y": 940,
        "wires": [
            [
                "fcf0c780.08c1d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "fcf0c780.08c1d8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 940,
        "wires": [
            [
                "fd6e82bc.30235"
            ]
        ]
    },
    {
        "id": "89cfd52.1eb2928",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "Init FFC",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "1ee58b30.404be5"
            ]
        ]
    },
    {
        "id": "1ee58b30.404be5",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "hold capture",
        "func": "flow.set('resettingCamera',true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 1040,
        "wires": [
            [
                "808c8caf.d76fb"
            ]
        ]
    },
    {
        "id": "2fcf61df.b03cce",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1540,
        "y": 1020,
        "wires": [
            [
                "bef6edc2.3d633"
            ]
        ]
    },
    {
        "id": "808c8caf.d76fb",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 1350,
        "y": 1040,
        "wires": [
            [
                "2fcf61df.b03cce"
            ],
            [],
            []
        ]
    },
    {
        "id": "bef6edc2.3d633",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "resume capture",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1720,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ad74465e.369b88",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Yellow LED",
        "pin": "33",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1410,
        "y": 780,
        "wires": []
    },
    {
        "id": "f8d673c5.5bd28",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Blue LED",
        "pin": "35",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1400,
        "y": 720,
        "wires": []
    },
    {
        "id": "cf253b68.57e198",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 800,
        "wires": [
            [
                "ad74465e.369b88"
            ]
        ]
    },
    {
        "id": "247ec1cc.5f8a1e",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 780,
        "wires": [
            [
                "168951fc.8f349e",
                "ad74465e.369b88"
            ]
        ]
    },
    {
        "id": "168951fc.8f349e",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1100,
        "y": 800,
        "wires": [
            [
                "cf253b68.57e198"
            ]
        ]
    },
    {
        "id": "5615880c.5e0d98",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "cf253b68.57e198"
            ]
        ]
    },
    {
        "id": "c40dd8f4.63a9d8",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality out",
        "links": [
            "6d0d620b.cc2c0c"
        ],
        "x": 595,
        "y": 320,
        "wires": []
    },
    {
        "id": "6d0d620b.cc2c0c",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Check Target distance in",
        "links": [
            "c40dd8f4.63a9d8"
        ],
        "x": 135,
        "y": 1060,
        "wires": [
            [
                "4476ac96.b88ec4"
            ]
        ]
    },
    {
        "id": "4476ac96.b88ec4",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Distance 4 m",
        "func": "return {topic:'targetDistance',payload:400};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "e2249214.f4375"
            ]
        ]
    }
]